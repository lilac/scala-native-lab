package build
import os.Path
import mill._, scalalib._, scalanativelib._, scalanativelib.api._

object `package` extends RootModule with SbtNativeModule {
  def scalaVersion = "3.3.4"
  def scalaNativeVersion = "0.5.5"

  // You can have arbitrary numbers of third-party dependencies
  // Scala Native uses double colon `::` between organization and the dependency names
  def ivyDeps = Agg(
    ivy"ch.epfl.lamp::gears::0.2.0"
  )

  // Set the releaseMode to ReleaseFast.
  def releaseMode: T[ReleaseMode] = ReleaseMode.ReleaseFast

  /** Shall linker dump intermediate NIR after every phase? */
  override def nativeDump: T[Boolean] = true

  // Set incremental compilation to true
  def nativeIncrementalCompilation: T[Boolean] = true

  // Set nativeLinkingOptions path to a directory named `target`.
  def nativeLinkingOptions = Seq("-L" + millSourcePath.toString + "/target")

  object test extends ScalaNativeTests with SbtTests with TestModule.Munit {
    def ivyDeps = Agg(ivy"org.scalameta::munit::1.0.2")
    def testFramework = "munit.Framework"
  }
}

// This example shows some of the common tasks you may want to override on a
// `ScalaNativeModule`: specifying the `releaseMode`,
// `nativeIncrementalCompilation, `nativeLinkingOptions` and `nativeWorkdir`.

/** Usage

> ./mill run
...
Value: <h1>hello</h1>

> ./mill show releaseMode
"mill.scalanativelib.api.ReleaseMode.ReleaseFast"

> ./mill show nativeIncrementalCompilation
true

> ./mill show nativeLinkingOptions
...

> ./mill show nativeWorkdir
...

*/
